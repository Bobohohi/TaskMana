[
  {
    "ContainingType": "Task_API.Controllers.BoardController",
    "Method": "getBoard",
    "RelativePath": "api/Board",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.BoardController",
    "Method": "addBoard",
    "RelativePath": "api/Board",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "x",
        "Type": "Task_API.MyModels.Add_Board",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.BoardController",
    "Method": "GetListBoardByProjectId",
    "RelativePath": "api/Board/GetListBoardByProjectId/{projectId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Task_API.Models.Board, Task_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_API.Controllers.CommentController",
    "Method": "getComment",
    "RelativePath": "api/Comment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.CommentController",
    "Method": "addComment",
    "RelativePath": "api/Comment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "x",
        "Type": "Task_API.MyModels.Add_Comment",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.CommentController",
    "Method": "GetCommentByTaskId",
    "RelativePath": "api/Comment/GetCommentByTaskId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.FileTaskController",
    "Method": "getFiletask",
    "RelativePath": "api/FileTask",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.FileTaskController",
    "Method": "UploadFileToCloudinary",
    "RelativePath": "api/FileTask/file",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.GroupController",
    "Method": "getGroup",
    "RelativePath": "api/Group",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.GroupController",
    "Method": "addGroup",
    "RelativePath": "api/Group",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "x",
        "Type": "Task_API.MyModels.Add_Group",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.GroupController",
    "Method": "GetGroupById",
    "RelativePath": "api/Group/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.GroupController",
    "Method": "GetListGroupByUserId",
    "RelativePath": "api/Group/GetListGroupByUserId/{UserId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Task_API.Models.Group, Task_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_API.Controllers.GroupDetailController",
    "Method": "getGDetail",
    "RelativePath": "api/GroupDetail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.GroupDetailController",
    "Method": "AddMember",
    "RelativePath": "api/GroupDetail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newMember",
        "Type": "Task_API.MyModels.Add_GroupDetail",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.GroupDetailController",
    "Method": "GetAllGroupByUserId",
    "RelativePath": "api/GroupDetail/GetAllGroupByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.GroupDetailController",
    "Method": "GetAllUserByGroupId",
    "RelativePath": "api/GroupDetail/GetAllUserByGroupId/{groupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.GroupDetailController",
    "Method": "GetRoleByGroupAndUser",
    "RelativePath": "api/GroupDetail/GetRoleByGroupAndUser/{groupId}/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ImageAvatarController",
    "Method": "UploadToCloudinary",
    "RelativePath": "api/ImageAvatar/image",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.LoginController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Login/forgotpassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.LoginController",
    "Method": "Login",
    "RelativePath": "api/Login/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "Task_API.MyModels.LoginInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.LoginController",
    "Method": "Register",
    "RelativePath": "api/Login/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerRequest",
        "Type": "Task_API.MyModels.RegisterInput",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.LoginController",
    "Method": "SendCode",
    "RelativePath": "api/Login/sendcode",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.MembershipController",
    "Method": "getMembership",
    "RelativePath": "api/Membership",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.MomoController",
    "Method": "CreatePayment",
    "RelativePath": "api/Momo/create-payment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Task_API.Controllers.MoMoRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.NoticeController",
    "Method": "getNotice",
    "RelativePath": "api/Notice",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.NoticeController",
    "Method": "addNotice",
    "RelativePath": "api/Notice",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "x",
        "Type": "Task_API.MyModels.Add_Notice",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.NoticeController",
    "Method": "AddListNotice",
    "RelativePath": "api/Notice/addListNotice",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "listNotice",
        "Type": "System.Collections.Generic.List\u00601[[Task_API.MyModels.Add_Notice, Task_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.NoticeController",
    "Method": "UpdateIsRead",
    "RelativePath": "api/Notice/UpdateIsRead/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.NoticeController",
    "Method": "GetNoticeByUserId",
    "RelativePath": "api/Notice/UserId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Task_API.Models.Notification, Task_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PayOSController",
    "Method": "ConfirmWebhook",
    "RelativePath": "api/PayOS/confirm-webhook",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "webhookUrl",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PayOSController",
    "Method": "CreatePaymentLink",
    "RelativePath": "api/PayOS/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "body",
        "Type": "CreatePaymentLinkRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ProjectController",
    "Method": "getProject",
    "RelativePath": "api/Project",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ProjectController",
    "Method": "addProject",
    "RelativePath": "api/Project",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "x",
        "Type": "Task_API.MyModels.Add_Project",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ProjectController",
    "Method": "GetListProjectByGroupId",
    "RelativePath": "api/Project/GetListProjectByGroupId/{groupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Task_API.Models.Project, Task_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_API.Controllers.ReportController",
    "Method": "getReport",
    "RelativePath": "api/Report",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ReportController",
    "Method": "addReport",
    "RelativePath": "api/Report",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "t",
        "Type": "Task_API.MyModels.Add_Report",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ReportController",
    "Method": "GetReportByProjectId",
    "RelativePath": "api/Report/GetReportByProjectId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskController",
    "Method": "getTask",
    "RelativePath": "api/Task",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskController",
    "Method": "addTask",
    "RelativePath": "api/Task",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Task_API.MyModels.Add_Single_Task",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskController",
    "Method": "GetTaskById",
    "RelativePath": "api/Task/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskController",
    "Method": "addTask",
    "RelativePath": "api/Task/addTasks",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "Task_API.MyModels.Add_ProjectTask",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskController",
    "Method": "GetListTaskByProjectId",
    "RelativePath": "api/Task/GetListTaskByProjectId/{projectId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "projectId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Task_API.Models.Task, Task_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_API.Controllers.TaskController",
    "Method": "GetListTaskByUserId",
    "RelativePath": "api/Task/GetListTaskByUserId/{UserId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UserId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Task_API.MyModels.Add_Single_Task, Task_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Task_API.Controllers.TaskController",
    "Method": "ResetDailyTasks",
    "RelativePath": "api/Task/ResetDailyTasks",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskController",
    "Method": "UpdateStatus",
    "RelativePath": "api/Task/UpdateStatus",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "newStatus",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskDetailController",
    "Method": "getTDetail",
    "RelativePath": "api/TaskDetail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskDetailController",
    "Method": "addTaskDetail",
    "RelativePath": "api/TaskDetail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "x",
        "Type": "Task_API.MyModels.Add_TaskDetail",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskDetailController",
    "Method": "GetAllTaskByUserId",
    "RelativePath": "api/TaskDetail/GetAllTaskByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskDetailController",
    "Method": "GetUserByTaskId",
    "RelativePath": "api/TaskDetail/GetUserByTaskId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskFileController",
    "Method": "getTaskFile",
    "RelativePath": "api/TaskFile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskFileController",
    "Method": "addTaskFile",
    "RelativePath": "api/TaskFile",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "x",
        "Type": "Task_API.MyModels.Add_TaskFile",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.TaskFileController",
    "Method": "GetTaskFileByTaskId",
    "RelativePath": "api/TaskFile/GetTaskFileByTaskId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "taskId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserController",
    "Method": "getUser",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserController",
    "Method": "CountByUserId",
    "RelativePath": "api/User/CountByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "month",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "year",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/User/GetUserById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserController",
    "Method": "GetUserIdByEmail",
    "RelativePath": "api/User/GetUserIdByEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserController",
    "Method": "UpdatePictureUrlByUserIdAndPictureUrl",
    "RelativePath": "api/User/UpdatePictureUrl",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pictureUrl",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/UpdateUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatedUser",
        "Type": "Task_API.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserSubController",
    "Method": "getUSub",
    "RelativePath": "api/UserSub",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserSubController",
    "Method": "addUserSub",
    "RelativePath": "api/UserSub",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "x",
        "Type": "Task_API.MyModels.Add_UserSub",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserSubController",
    "Method": "CheckValidSubscription",
    "RelativePath": "api/UserSub/CheckValidSubscription",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserSubController",
    "Method": "GetUserSubByUserId",
    "RelativePath": "api/UserSub/GetByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.UserSubController",
    "Method": "GetCurrentSubscriptionByUserId",
    "RelativePath": "api/UserSub/GetCurrentSubscriptionByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.WebhookController",
    "Method": "ReceiveWebhook",
    "RelativePath": "api/Webhook/receive",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "webhook",
        "Type": "Net.payOS.Types.WebhookType",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ZaloPayController",
    "Method": "CreateOrder",
    "RelativePath": "api/ZaloPay/create-order",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Task_API.Controllers.ZaloPayController\u002BZaloPayRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ZaloPayController",
    "Method": "Notify",
    "RelativePath": "api/ZaloPay/notify",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ZaloPayController",
    "Method": "PaymentCallback",
    "RelativePath": "api/ZaloPay/payment-callback",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "callback",
        "Type": "Task_API.Controllers.ZaloPayController\u002BZaloPayCallback",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.ZaloPayController",
    "Method": "GetPaymentStatus",
    "RelativePath": "api/ZaloPay/status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Task_API.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Task_API.WeatherForecast, Task_API, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]