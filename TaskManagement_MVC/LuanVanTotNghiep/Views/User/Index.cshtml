@model LuanVanTotNghiep.Models.UserItem
@{
    ViewData["Title"] = "User";
    Layout = null;
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <style>
        body {
            background: rgb(255,71,87);
            background: linear-gradient(90deg, rgba(255,71,87,1) 23%, rgba(139, 4, 201, 1) 50%, rgba(43,148,233,1) 100%);
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            height: 100vh;
        }

        .btn-primary:hover {
            background-color: #ff4757;
            box-shadow: 0 4px 10px rgba(255, 71, 87, 0.5);
        }

        .form-control, .btn {
            border-radius: 10px;
            padding: 10px 15px;
        }

        .btn-primary {
            background-color: #ff6b6b;
            border: none;
            transition: all 0.3s;
        }

        .login-card {
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            background-color: white;
            position: relative;
            z-index: 1;
            width: 100%;
            max-width: 600px;
        }

        .avatar-container {
            position: absolute;
            top: -50px;
            left: 50%;
            transform: translateX(-50%);
            border-radius: 50%;
            border: 5px solid white;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }
        .avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            transition: transform 0.2s ease;
        }

            .avatar:hover {
                transform: scale(1.05);
            }

    </style>
</head>

<div class="d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="card p-4 login-card" style="width: 600px;">
        <div class="avatar-container">
            <!-- Avatar + Dropdown -->
            <div class="dropdown text-center position-relative">
                <button class="btn p-0 border-0 bg-transparent" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <img src="@Model.PictureUrl" alt="Avatar" class="avatar" />
                </button>
                <ul class="dropdown-menu text-center shadow">
                    <li>
                        <label for="uploadInput" class="dropdown-item" style="cursor: pointer;">Upload Avatar</label>
                    </li>
                </ul>
                <form asp-action="UploadAvatar" method="post" enctype="multipart/form-data" style="display: none;" id="uploadForm">
                    <input type="file" id="uploadInput" name="PictureFile"  onchange="document.getElementById('uploadForm').submit();" />
                </form>
            </div>
        </div>
        <!-- User information -->
        <h3 class="text-center mt-5" value="@Model.Name"></h3>
        <form asp-action="UpdateUserInfor" method="post">
            <div class="mb-3">
                <label>Name:</label>
                <input class="form-control" type="text" name="Name" value="@Model.Name" required />
            </div>

            <div class="mb-3 d-flex gap-3">
                <!-- Birthdate -->
                <div class="flex-grow-1">
                    <label>Birthdate:</label>
                    <input class="form-control" type="date" name="BirthDay"
                           value="@(Model.BirthDay.HasValue ? Model.BirthDay.Value.ToString("yyyy-MM-dd") : "")" required />
                </div>

                <!-- Gender -->
                <div class="flex-grow-1">
                    <label>Gender:</label>
                    @Html.DropDownListFor(model => model.Sex,
                             new List<SelectListItem>
                    {
                    new SelectListItem { Text = "-- Select gender --", Value = "" },
                    new SelectListItem { Text = "Male", Value = "M" },
                    new SelectListItem { Text = "Female", Value = "F" }
                    },
                             new { @class = "form-control", required = "required" })
                </div>
            </div>

            <div class="mb-3">
                <label>Phone Number:</label>
                <input class="form-control" type="text" name="PhoneNumber" value="@Model.PhoneNumber" required />
            </div>
            <div class="mb-3">
                <label>Address:</label>
                <input class="form-control" type="text" name="Address" value="@Model.Address" required />
            </div>

            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-primary w-100">Update</button>
                <a href="~/Home" class="btn btn-secondary w-100">Cancel</a>
            </div>

            @if (ViewBag.Error != null)
            {
                <p class="text-danger text-center mt-3">@ViewBag.Error</p>
            }
        </form>

    </div>
</div>
